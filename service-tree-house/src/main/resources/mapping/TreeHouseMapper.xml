<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongzhu.treehouse.mapper.TreeHouseMapper" >
  <resultMap id="BaseResultMap" type="com.tongzhu.treehouse.model.TreeHouse" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="culture_value" property="cultureValue" jdbcType="INTEGER" />
    <result column="break_value" property="breakValue" jdbcType="INTEGER" />
    <result column="flourishing_rate" property="flourishingRate" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="ambience_count" property="ambienceCount" jdbcType="INTEGER" />
    <result column="amusement_count" property="amusementCount" jdbcType="INTEGER" />
    <result column="environment_count" property="environmentCount" jdbcType="INTEGER" />
    <result column="style_" property="style" jdbcType="INTEGER" />
    <result column="can_speak" property="canSpeak" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, level, culture_value, break_value, flourishing_rate, start_date, create_date, 
    update_date, ambience_count, amusement_count, environment_count, style_, can_speak
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tongzhu.treehouse.model.TreeHouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_tree_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tz_tree_house
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tz_tree_house
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongzhu.treehouse.model.TreeHouseExample" >
    delete from tz_tree_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongzhu.treehouse.model.TreeHouse" >
    insert into tz_tree_house (id, user_id, level, 
      culture_value, break_value, flourishing_rate, 
      start_date, create_date, update_date, 
      ambience_count, amusement_count, environment_count, 
      style_, can_speak)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{cultureValue,jdbcType=INTEGER}, #{breakValue,jdbcType=INTEGER}, #{flourishingRate,jdbcType=INTEGER}, 
      #{startDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{ambienceCount,jdbcType=INTEGER}, #{amusementCount,jdbcType=INTEGER}, #{environmentCount,jdbcType=INTEGER}, 
      #{style,jdbcType=INTEGER}, #{canSpeak,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.tongzhu.treehouse.model.TreeHouse" >
    insert into tz_tree_house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="cultureValue != null" >
        culture_value,
      </if>
      <if test="breakValue != null" >
        break_value,
      </if>
      <if test="flourishingRate != null" >
        flourishing_rate,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="ambienceCount != null" >
        ambience_count,
      </if>
      <if test="amusementCount != null" >
        amusement_count,
      </if>
      <if test="environmentCount != null" >
        environment_count,
      </if>
      <if test="style != null" >
        style_,
      </if>
      <if test="canSpeak != null" >
        can_speak,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="cultureValue != null" >
        #{cultureValue,jdbcType=INTEGER},
      </if>
      <if test="breakValue != null" >
        #{breakValue,jdbcType=INTEGER},
      </if>
      <if test="flourishingRate != null" >
        #{flourishingRate,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ambienceCount != null" >
        #{ambienceCount,jdbcType=INTEGER},
      </if>
      <if test="amusementCount != null" >
        #{amusementCount,jdbcType=INTEGER},
      </if>
      <if test="environmentCount != null" >
        #{environmentCount,jdbcType=INTEGER},
      </if>
      <if test="style != null" >
        #{style,jdbcType=INTEGER},
      </if>
      <if test="canSpeak != null" >
        #{canSpeak,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongzhu.treehouse.model.TreeHouseExample" resultType="java.lang.Integer" >
    select count(*) from tz_tree_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tz_tree_house
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.cultureValue != null" >
        culture_value = #{record.cultureValue,jdbcType=INTEGER},
      </if>
      <if test="record.breakValue != null" >
        break_value = #{record.breakValue,jdbcType=INTEGER},
      </if>
      <if test="record.flourishingRate != null" >
        flourishing_rate = #{record.flourishingRate,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ambienceCount != null" >
        ambience_count = #{record.ambienceCount,jdbcType=INTEGER},
      </if>
      <if test="record.amusementCount != null" >
        amusement_count = #{record.amusementCount,jdbcType=INTEGER},
      </if>
      <if test="record.environmentCount != null" >
        environment_count = #{record.environmentCount,jdbcType=INTEGER},
      </if>
      <if test="record.style != null" >
        style_ = #{record.style,jdbcType=INTEGER},
      </if>
      <if test="record.canSpeak != null" >
        can_speak = #{record.canSpeak,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tz_tree_house
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      culture_value = #{record.cultureValue,jdbcType=INTEGER},
      break_value = #{record.breakValue,jdbcType=INTEGER},
      flourishing_rate = #{record.flourishingRate,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      ambience_count = #{record.ambienceCount,jdbcType=INTEGER},
      amusement_count = #{record.amusementCount,jdbcType=INTEGER},
      environment_count = #{record.environmentCount,jdbcType=INTEGER},
      style_ = #{record.style,jdbcType=INTEGER},
      can_speak = #{record.canSpeak,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongzhu.treehouse.model.TreeHouse" >
    update tz_tree_house
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="cultureValue != null" >
        culture_value = #{cultureValue,jdbcType=INTEGER},
      </if>
      <if test="breakValue != null" >
        break_value = #{breakValue,jdbcType=INTEGER},
      </if>
      <if test="flourishingRate != null" >
        flourishing_rate = #{flourishingRate,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ambienceCount != null" >
        ambience_count = #{ambienceCount,jdbcType=INTEGER},
      </if>
      <if test="amusementCount != null" >
        amusement_count = #{amusementCount,jdbcType=INTEGER},
      </if>
      <if test="environmentCount != null" >
        environment_count = #{environmentCount,jdbcType=INTEGER},
      </if>
      <if test="style != null" >
        style_ = #{style,jdbcType=INTEGER},
      </if>
      <if test="canSpeak != null" >
        can_speak = #{canSpeak,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongzhu.treehouse.model.TreeHouse" >
    update tz_tree_house
    set user_id = #{userId,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      culture_value = #{cultureValue,jdbcType=INTEGER},
      break_value = #{breakValue,jdbcType=INTEGER},
      flourishing_rate = #{flourishingRate,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      ambience_count = #{ambienceCount,jdbcType=INTEGER},
      amusement_count = #{amusementCount,jdbcType=INTEGER},
      environment_count = #{environmentCount,jdbcType=INTEGER},
      style_ = #{style,jdbcType=INTEGER},
      can_speak = #{canSpeak,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>