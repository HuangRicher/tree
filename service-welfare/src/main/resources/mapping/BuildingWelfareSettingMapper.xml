<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongzhu.welfare.mapper.BuildingWelfareSettingMapper" >
  <resultMap id="BaseResultMap" type="com.tongzhu.welfare.model.BuildingWelfareSetting" >
    <id column="grade" property="grade" jdbcType="INTEGER" />
    <result column="upgrade_gold" property="upgradeGold" jdbcType="INTEGER" />
    <result column="upgrade_time" property="upgradeTime" jdbcType="INTEGER" />
    <result column="output_gold_rate" property="outputGoldRate" jdbcType="INTEGER" />
    <result column="output_gold_min" property="outputGoldMin" jdbcType="INTEGER" />
    <result column="output_gold_max" property="outputGoldMax" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    grade, upgrade_gold, upgrade_time, output_gold_rate, output_gold_min, output_gold_max
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tongzhu.welfare.model.BuildingWelfareSettingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_building_welfare_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tz_building_welfare_setting
    where grade = #{grade,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tz_building_welfare_setting
    where grade = #{grade,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongzhu.welfare.model.BuildingWelfareSettingExample" >
    delete from tz_building_welfare_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongzhu.welfare.model.BuildingWelfareSetting" >
    insert into tz_building_welfare_setting (grade, upgrade_gold, upgrade_time, 
      output_gold_rate, output_gold_min, output_gold_max
      )
    values (#{grade,jdbcType=INTEGER}, #{upgradeGold,jdbcType=INTEGER}, #{upgradeTime,jdbcType=INTEGER}, 
      #{outputGoldRate,jdbcType=INTEGER}, #{outputGoldMin,jdbcType=INTEGER}, #{outputGoldMax,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tongzhu.welfare.model.BuildingWelfareSetting" >
    insert into tz_building_welfare_setting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="grade != null" >
        grade,
      </if>
      <if test="upgradeGold != null" >
        upgrade_gold,
      </if>
      <if test="upgradeTime != null" >
        upgrade_time,
      </if>
      <if test="outputGoldRate != null" >
        output_gold_rate,
      </if>
      <if test="outputGoldMin != null" >
        output_gold_min,
      </if>
      <if test="outputGoldMax != null" >
        output_gold_max,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="upgradeGold != null" >
        #{upgradeGold,jdbcType=INTEGER},
      </if>
      <if test="upgradeTime != null" >
        #{upgradeTime,jdbcType=INTEGER},
      </if>
      <if test="outputGoldRate != null" >
        #{outputGoldRate,jdbcType=INTEGER},
      </if>
      <if test="outputGoldMin != null" >
        #{outputGoldMin,jdbcType=INTEGER},
      </if>
      <if test="outputGoldMax != null" >
        #{outputGoldMax,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongzhu.welfare.model.BuildingWelfareSettingExample" resultType="java.lang.Integer" >
    select count(*) from tz_building_welfare_setting
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tz_building_welfare_setting
    <set >
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.upgradeGold != null" >
        upgrade_gold = #{record.upgradeGold,jdbcType=INTEGER},
      </if>
      <if test="record.upgradeTime != null" >
        upgrade_time = #{record.upgradeTime,jdbcType=INTEGER},
      </if>
      <if test="record.outputGoldRate != null" >
        output_gold_rate = #{record.outputGoldRate,jdbcType=INTEGER},
      </if>
      <if test="record.outputGoldMin != null" >
        output_gold_min = #{record.outputGoldMin,jdbcType=INTEGER},
      </if>
      <if test="record.outputGoldMax != null" >
        output_gold_max = #{record.outputGoldMax,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tz_building_welfare_setting
    set grade = #{record.grade,jdbcType=INTEGER},
      upgrade_gold = #{record.upgradeGold,jdbcType=INTEGER},
      upgrade_time = #{record.upgradeTime,jdbcType=INTEGER},
      output_gold_rate = #{record.outputGoldRate,jdbcType=INTEGER},
      output_gold_min = #{record.outputGoldMin,jdbcType=INTEGER},
      output_gold_max = #{record.outputGoldMax,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongzhu.welfare.model.BuildingWelfareSetting" >
    update tz_building_welfare_setting
    <set >
      <if test="upgradeGold != null" >
        upgrade_gold = #{upgradeGold,jdbcType=INTEGER},
      </if>
      <if test="upgradeTime != null" >
        upgrade_time = #{upgradeTime,jdbcType=INTEGER},
      </if>
      <if test="outputGoldRate != null" >
        output_gold_rate = #{outputGoldRate,jdbcType=INTEGER},
      </if>
      <if test="outputGoldMin != null" >
        output_gold_min = #{outputGoldMin,jdbcType=INTEGER},
      </if>
      <if test="outputGoldMax != null" >
        output_gold_max = #{outputGoldMax,jdbcType=INTEGER},
      </if>
    </set>
    where grade = #{grade,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongzhu.welfare.model.BuildingWelfareSetting" >
    update tz_building_welfare_setting
    set upgrade_gold = #{upgradeGold,jdbcType=INTEGER},
      upgrade_time = #{upgradeTime,jdbcType=INTEGER},
      output_gold_rate = #{outputGoldRate,jdbcType=INTEGER},
      output_gold_min = #{outputGoldMin,jdbcType=INTEGER},
      output_gold_max = #{outputGoldMax,jdbcType=INTEGER}
    where grade = #{grade,jdbcType=INTEGER}
  </update>
</mapper>