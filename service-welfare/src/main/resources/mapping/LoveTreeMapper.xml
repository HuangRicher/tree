<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongzhu.welfare.mapper.LoveTreeMapper" >
  <resultMap id="BaseResultMap" type="com.tongzhu.welfare.model.LoveTree" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="engagement_id" property="engagementId" jdbcType="VARCHAR" />
    <result column="love_tree_grade" property="loveTreeGrade" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="exp_limit" property="expLimit" jdbcType="INTEGER" />
    <result column="exp_num" property="expNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, created_time, engagement_id, love_tree_grade, update_time, exp_limit, exp_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tongzhu.welfare.model.LoveTreeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_love_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tz_love_tree
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tz_love_tree
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongzhu.welfare.model.LoveTreeExample" >
    delete from tz_love_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongzhu.welfare.model.LoveTree" >
    insert into tz_love_tree (id, created_time, engagement_id, 
      love_tree_grade, update_time, exp_limit, 
      exp_num)
    values (#{id,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{engagementId,jdbcType=VARCHAR}, 
      #{loveTreeGrade,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{expLimit,jdbcType=INTEGER}, 
      #{expNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tongzhu.welfare.model.LoveTree" >
    insert into tz_love_tree
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="engagementId != null" >
        engagement_id,
      </if>
      <if test="loveTreeGrade != null" >
        love_tree_grade,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="expLimit != null" >
        exp_limit,
      </if>
      <if test="expNum != null" >
        exp_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="engagementId != null" >
        #{engagementId,jdbcType=VARCHAR},
      </if>
      <if test="loveTreeGrade != null" >
        #{loveTreeGrade,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expLimit != null" >
        #{expLimit,jdbcType=INTEGER},
      </if>
      <if test="expNum != null" >
        #{expNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongzhu.welfare.model.LoveTreeExample" resultType="java.lang.Integer" >
    select count(*) from tz_love_tree
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tz_love_tree
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.engagementId != null" >
        engagement_id = #{record.engagementId,jdbcType=VARCHAR},
      </if>
      <if test="record.loveTreeGrade != null" >
        love_tree_grade = #{record.loveTreeGrade,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expLimit != null" >
        exp_limit = #{record.expLimit,jdbcType=INTEGER},
      </if>
      <if test="record.expNum != null" >
        exp_num = #{record.expNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tz_love_tree
    set id = #{record.id,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      engagement_id = #{record.engagementId,jdbcType=VARCHAR},
      love_tree_grade = #{record.loveTreeGrade,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      exp_limit = #{record.expLimit,jdbcType=INTEGER},
      exp_num = #{record.expNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongzhu.welfare.model.LoveTree" >
    update tz_love_tree
    <set >
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="engagementId != null" >
        engagement_id = #{engagementId,jdbcType=VARCHAR},
      </if>
      <if test="loveTreeGrade != null" >
        love_tree_grade = #{loveTreeGrade,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expLimit != null" >
        exp_limit = #{expLimit,jdbcType=INTEGER},
      </if>
      <if test="expNum != null" >
        exp_num = #{expNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongzhu.welfare.model.LoveTree" >
    update tz_love_tree
    set created_time = #{createdTime,jdbcType=TIMESTAMP},
      engagement_id = #{engagementId,jdbcType=VARCHAR},
      love_tree_grade = #{loveTreeGrade,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      exp_limit = #{expLimit,jdbcType=INTEGER},
      exp_num = #{expNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>